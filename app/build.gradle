//apply plugin: 'com.android.library'
apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
//        applicationId "com.almalence.opencam"
        minSdkVersion 16
        targetSdkVersion 23

        ndk {
            moduleName "bento4"
        }
    }

    buildTypes {
        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs' //set libs as .so's location instead of jniLibs
        jni.srcDirs = [] //disable automatic ndk-build call with auto-generated Android.mk
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build",
                '-C', file('src/main/jni').absolutePath,
                '-j', Runtime.runtime.availableProcessors(),
                'all'
//                , 'NDK_DEBUG=1'
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build",
                '-C', file('src/main/jni').absolutePath,
                'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }
}

dependencies {
    compile 'com.android.support:support-v13:23.4.0'

//    compile files('libs/android-support-v13.jar')
    compile files('libs/androidexiv2.jar')
    compile files('libs/openiab-0.9.8.6.jar')
    compile files('libs/zxing-2.1/core.jar')
//    compile project(':base')

//    compile(project(':mpicamera')) {
//        exclude module: 'com.android.support:appcompat-v7:23.4.0'
//        exclude module: ':base'
//        exclude module: ':themes'
//    }

}
